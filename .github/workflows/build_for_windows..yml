name: Package Application with PyInstaller for Windows
on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
      - "b*"

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Download FFMPEG
        run: |
          curl -L -o ffmpeg.zip https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip
          tar -xf ffmpeg.zip -C dependencies
          move dependencies\ffmpeg-master-latest-win64-gpl dependencies\ffmpeg
          rm ffmpeg.zip

      - name: Download ungoogled-chromium
        run: |
          curl -L -o ungoogled-chromium.zip https://github.com/tangalbert919/ungoogled-chromium-binaries/releases/download/87.0.4280.67-1/ungoogled-chromium_87.0.4280.67-1.1_windows-x64.zip
          tar -xf ungoogled-chromium.zip -C dependencies
          move dependencies\ungoogled-chromium_87.0.4280.67-1.1_windows dependencies\ungoogled-chromium
          rm ungoogled-chromium.zip

      - name: Download chromedriver
        run: |
          mkdir dependencies\chromedriver
          curl -L -o chromedriver.zip https://chromedriver.storage.googleapis.com/87.0.4280.20/chromedriver_win32.zip
          tar -xf chromedriver.zip -C dependencies\chromedriver
          rm chromedriver.zip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Package Application with PyInstaller
        run: |
          pyinstaller GoExport.spec

      - name: Copy files to dist folder
        run: |
          copy readme.md dist\
          copy LICENSE dist\
          xcopy assets dist\assets /E /I /Q /Y

      - name: Build installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: setup\GoExport.iss
          options: /O+

      - name: Upload debug build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dev-build
          path: dist

      - name: Extract Changelog Section
        if: startsWith(github.ref, 'refs/tags/')
        id: changelog
        shell: pwsh
        run: |
          # Extract the tag version from github.ref_name (remove 'v' or 'b' prefix if present)
          $tagVersion = "${{ github.ref_name }}"
          $version = $tagVersion -replace '^[vb]', ''
          
          # Read the changelog file
          $changelogContent = Get-Content -Path "CHANGELOG.md" -Raw
          
          # Try to find the changelog section for this version
          $pattern1 = "(?s)## \[$version\].*?(?=## \[|$)"
          $pattern2 = "(?s)## \[$tagVersion\].*?(?=## \[|$)"
          
          $match = [regex]::Match($changelogContent, $pattern1)
          if (-not $match.Success) {
            $match = [regex]::Match($changelogContent, $pattern2)
          }
          
          if ($match.Success) {
            # Extract just the content after the version header
            $sectionContent = $match.Value -replace "^## \[.*?\].*?\r?\n", "" -replace "\r?\n$", ""
            $changelog = $sectionContent.Trim()
          } else {
            $changelog = "No specific changelog found for this version. See commit history below."
          }
          
          # Save changelog content to output
          "CHANGELOG_CONTENT<<EOF" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          $changelog | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          "EOF" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/goexport_setup.exe
          prerelease: ${{ startsWith(github.ref_name, 'b') }}
          body: |
            ${{ steps.changelog.outputs.CHANGELOG_CONTENT }}
            
            ---
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.ref_name }}
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
