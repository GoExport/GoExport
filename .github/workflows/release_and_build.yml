name: Build, Release, and Notify

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build with PyInstaller
        run: pyinstaller --onefile main.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.os }}
          path: |
            dist/main.exe
            dist/main
          if-no-files-found: ignore

  changelog:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      changelog: ${{ steps.extract.outputs.changelog }}
    steps:
      - uses: actions/checkout@v4
      - name: Extract changelog
        id: extract
        run: |
          section=$(awk '/## \['"${GITHUB_REF_NAME#v}"'\]/{flag=1; next} /^## /{flag=0} flag' CHANGELOG.md)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$section" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  release_assets:
    runs-on: ubuntu-latest
    needs: [build, changelog]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: ${{ needs.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  discord_notify:
    runs-on: ubuntu-latest
    needs: release_assets
    steps:
      - name: Notify Discord
        run: |
          repo_name="${GITHUB_REPOSITORY#*/}"
          tag="${GITHUB_REF_NAME}"

          # Pull in the changelog from the changelog job
          changelog="${{ needs.changelog.outputs.changelog }}"

          # Escape properly for JSON
          changelog_escaped=$(jq -Rs . <<< "$changelog")

          payload=$(jq -n \
            --arg role "<@&1346974681399427153>" \
            --arg repo "$repo_name" \
            --arg tag "$tag" \
            --argjson changelog "$changelog_escaped" \
            --arg channel "<#1347670260844855376>" \
            '{content: "\($role)\n\n# \($repo) - \($tag)\n\n\($changelog)\n\n\($channel)"}')

          curl -H "Content-Type: application/json" \
            -X POST \
            -d "$payload" \
            ${{ secrets.DISCORD_WEBHOOK }}
